plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.jetpackcomponentspractice"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}

//repositories {
//    google()
//    mavenCentral()
//}


dependencies {

//    val lifecycle_version = "2.6.0-alpha01"
//    val arch_version = "2.1.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


        // ViewModel
//        implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.0-alpha01")
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
        // LiveData
        implementation("androidx.lifecycle:lifecycle-livedata:2.6.0-alpha01")

       implementation 'com.github.bumptech.glide:glide:4.13.2'
       annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

     //  Room DB

    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")

    implementation 'androidx.room:room-ktx:2.2.1'

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.3")
    // To use Kotlin Symbol Processing (KSP)
//    ksp("androidx.room:room-compiler:2.4.3")

    // COroutines

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // JSON Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'



//        // Lifecycles only (without ViewModel or LiveData)
//        implementation("androidx.lifecycle:lifecycle-runtime:$lifecycle_version")
//
//        // Saved state module for ViewModel
//        implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
//
//        // Annotation processor
//        annotationProcessor("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
//        // alternately - if using Java8, use the following instead of lifecycle-compiler
//        implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
//
//        // optional - helpers for implementing LifecycleOwner in a Service
//        implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")
//
//        // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
//        implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")
//
//        // optional - ReactiveStreams support for LiveData
//        implementation("androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version")
//
//        // optional - Test helpers for LiveData
//        testImplementation("androidx.arch.core:core-testing:$arch_version")
//
//        // optional - Test helpers for Lifecycle runtime
//        testImplementation("androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version")

}